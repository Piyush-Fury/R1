name: NCC Scoute Suite

permissions:
  id-token: write
  contents: read
  actions: write

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: string
        description: 'The environment to deploy to'

jobs:
  ncc-monthly-scan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      # Determine Cloud Provider (AWS/GCP)
      - name: Set Cloud Provider
        run: |
          if [[ "${{ inputs.environment }}" == the5ers-* ]]; then
            echo "CLOUD_PROVIDER=aws" >> $GITHUB_ENV
          else
            echo "CLOUD_PROVIDER=gcp" >> $GITHUB_ENV
          fi

      # AWS Credential Setup (ONLY for AWS)
      - name: Configure AWS Credentials
        if: env.CLOUD_PROVIDER == 'aws'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: ${{ secrets.GH_OIDC_ROLE_SESSION_NAME }}

      # GCP Credential Setup (ONLY for GCP)
      - name: Authenticate to GCP
        if: env.CLOUD_PROVIDER == 'gcp'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}


      # Common Setup
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install scoutsuite
          

      # Set Account Name Variable Based on Cloud Provider
      - name: Set Account Name
        run: |
          if [[ "$CLOUD_PROVIDER" == "aws" ]]; then
            echo "ACCOUNT_NAME=${{ secrets.AWS_ACCOUNT_NAME }}" >> $GITHUB_ENV
          else
            echo "ACCOUNT_NAME=${{ secrets.GCP_PROJECT_NAME }}" >> $GITHUB_ENV
          fi

      - name: List GCS Buckets (Verify Auth)
        if: env.CLOUD_PROVIDER == 'gcp'
        run: |
          echo '${{ secrets.GCP_CREDENTIALS }}' > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud auth list
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"
          gsutil ls -p ttp-staging-422114

      # Scan Step
      - name: Scan
        run: |
          REPORT_DIR="./reports/${CLOUD_PROVIDER}/${ACCOUNT_NAME}"
          echo '${{ secrets.GCP_CREDENTIALS }}' > /tmp/gcp-key.json
          if [[ "$CLOUD_PROVIDER" == "gcp" ]]; then
              scout gcp --no-browser --report-dir "${REPORT_DIR}" -s /tmp/gcp-key.json || true
          else
              scout aws --no-browser --report-dir "${REPORT_DIR}" || true
          fi

      # Archive Report
      - name: Archive
        id: archive-report
        run: |
          DATE="$(date -u +"%Y-%m-%d")"
          REPORT_DIR="./reports/${CLOUD_PROVIDER}/${ACCOUNT_NAME}"
          ARCHIVE_FILE="ncc-scout-suite-report-${DATE}.tar.gz"
          echo "archive_file=${ARCHIVE_FILE}" >> $GITHUB_OUTPUT
          tar -zcvf "${ARCHIVE_FILE}" "${REPORT_DIR}"

      # Upload Report to S3 (for both AWS & GCP)
      - name: Upload Cloud Provider Report
        run: |
          DATE="$(date -u +"%Y-%m-%d")"
          ARCHIVE_FILE="ncc-scout-suite-report-${DATE}.tar.gz"

          if [[ "$CLOUD_PROVIDER" == "aws" ]]; then
            # AWS S3 Upload
            S3_BUCKET="s3://the5ers-scout-suite-reports"
            S3_TARGET_DIR="${S3_BUCKET}/${CLOUD_PROVIDER}/${ACCOUNT_NAME}"
            S3_FILE_PATH="${S3_TARGET_DIR}/${ARCHIVE_FILE}"
            
            echo "Uploading AWS report to: ${S3_FILE_PATH}"
            aws s3 cp "${ARCHIVE_FILE}" "${S3_FILE_PATH}"

          elif [[ "$CLOUD_PROVIDER" == "gcp" ]]; then
            # GCP GCS Upload
            GCS_BUCKET="gs://the5ers-scout-suite-report"
            GCS_TARGET_DIR="${GCS_BUCKET}/${CLOUD_PROVIDER}/${ACCOUNT_NAME}"
            GCS_FILE_PATH="${GCS_TARGET_DIR}/${ARCHIVE_FILE}"
            
            echo "Uploading GCP report to: ${GCS_FILE_PATH}"
            gsutil cp "${ARCHIVE_FILE}" "${GCS_FILE_PATH}"

          else
            echo "Error: Unsupported CLOUD_PROVIDER '$CLOUD_PROVIDER' (must be 'aws' or 'gcp')"
            exit 1
          fi

      - name: List files in workspace
        run: ls -la


      - name: Upload same file to Slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: files.uploadV2
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
            initial_comment: "Scout Suite report for *ttp-staging* environment is ready. ðŸ“„"
            file: "ncc-scout-suite-report-${DATE}.tar.gz"
            filename: "ncc-scout-suite-report-${DATE}.tar.gz"
 #     - name: Upload Report to Slack
 #       uses: slackapi/slack-github-action@v1.24.0
 #       with:
 #         channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
 #         slack-message: "Scout Suite report for ${{ inputs.environment }} environment."
 #         upload-files: ${{ steps.archive-report.outputs.archive_file }}
 #       env:
 #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
